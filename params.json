{"name":"Api-scubadiver","tagline":"RESTful API with Node.JS, Express and MongoDB for Openshift","body":"\r\nAPI - ScubaDiver\r\n----------------\r\n\r\nSimple Node.JS, Express, and Mongo example for OpenShift\r\n=========================================================\r\n\r\nThis is a simple Node.JS example that uses Express and has mongodb set up. It is all wired to go in OpenShift.\r\nI would not recommend using this for a more complicated application, as there should be more seperation into different files for different logic.\r\n\r\n\r\nRunning on OpenShift\r\n--------------------\r\n\r\nAssuming you already have an OpenShift account\r\n\r\n1) Create a Node.JS application and add a mongoDB cartridge\r\n\r\n\trhc app create <your app name> nodejs-0.10 mongodb-2 \r\n\r\n2) Clone repository to edit on your local device.\r\n\r\n\tgit clone <link to repo>\r\n\r\n3) Push changes to the remote git. \r\n\r\n> Every push will be build automatically (standard on OpenShift small gear). When the build failed you'll get an error `503 Service Temporarily Unavailable`\r\n\r\n\r\nEngines\r\n-----------\r\n\r\n![npm version](https://img.shields.io/npm/v/npm.svg) ![node.js version](https://img.shields.io/node/v/gh-badges.svg)\r\n\r\n`npm` is the package manager for javascript, and is default for Node.js. npm is bundled and installed automatically with the environment. npm runs through the command line and manages dependencies for an application.\r\n\r\nDependencies\r\n-------------------\r\n\r\nTo get the dependencies include the following in your `package.json` file.\r\n\r\n    \"dependencies\": {\r\n          \"mongodb\" : \"> 1.1.10\",\r\n          \"express\": \"> 4.0.0\",\r\n          \"mongoose\": \"> 3.6.13\",\r\n          \"body-parser\": \">= 1.0.1\",\r\n          \"bson\": \">= 0.2.16\" \r\n    },\r\n\r\nAfter adding this run the command within your project\r\n\r\n    npm install\r\n\r\nAll the packages will be include in the `node_modules` folder\r\n\r\nEnvironment Variables\r\n--------\r\n\r\nThe **Node.JS cartridge** provides several environment variables to reference for ease of use:\r\n\r\n    OPENSHIFT_NODEJS_IP\r\n    The IP address used to bind Node.js\r\n \r\n    OPENSHIFT_NODEJS_PORT \r\n    The Node.js listening port\r\n \r\n    OPENSHIFT_NODEJS_POLL_INTERVAL \r\n    May be set as a user environment variable to change the default of 1s\r\n\r\n\r\nThe **mongodb cartridge** provides several environment variables to reference for ease of use:\r\n\r\n    OPENSHIFT_MONGODB_DB_HOST \r\n    The MongoDB IP address\r\n    \r\n    OPENSHIFT_MONGODB_DB_PORT \r\n    The MongoDB port \r\n    \r\n    OPENSHIFT_MONGODB_DB_USERNAME \r\n    The MongoDB username\r\n\t\r\n    OPENSHIFT_MONGODB_DB_PASSWORD \r\n    The MongoDB password\r\n\t\r\n    OPENSHIFT_MONGODB_DB_URL \r\n    The MongoDB connection URL \r\n    (e.g. `mongodb://<username>:<password>@<hostname>:<port>/<table>`)\r\n\t\r\n    OPENSHIFT_MONGODB_DB_LOG_DIR \r\n    The path to the MongoDB log directory\r\n\r\n\r\nRepo Layout\r\n-----------\r\n\r\n    .openshift/                 - Location for OpenShift specific files.\r\n    .openshift/action_hooks/    - Entry points into various application and\r\n                                  platform lifecycle operations.\r\n    .openshift/cron/            - Scripts or jobs to be run on a periodic basis.\r\n    .openshift/markers/         - Marker files, eg. hot_deploy enabling hot\r\n                                  deploy feature.\r\n    node_modules/               - Any node modules packaged with the app.\r\n    README.md                   - This file.\r\n    deplist.txt                 - Deprecated.\r\n    index.html                  - Default OpenShift page seen when you open your\r\n                                  app in a web browser.\r\n    package.json                - npm package descriptor.\r\n    server.js                   - Main application file, where the whole logic\r\n                                  is placed.\r\n\r\nBibliography\r\n------------\r\n\r\n - [Build a RESTful API Using Node and Express 4](http://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4)\r\n - [Designing a RESTful Web API](http://scotch.io/bar-talk/designing-a-restful-web-api)\r\n - [Mongoose Schemas](http://mongoosejs.com/docs/guide.html)\r\n - [OpenShift Origin Cartridge Guide](http://www.openshift.org/documentation/oo_cartridge_guide.html)\r\n\r\nLicense ![MIT License](https://img.shields.io/npm/l/express.svg)\r\n------\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}